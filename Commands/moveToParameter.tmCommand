<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>saveActiveFile</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby -wKU

SUPPORT = "#{ENV['TM_SUPPORT_PATH']}"

require SUPPORT + '/lib/exit_codes'
require SUPPORT + '/lib/ui'
require ENV['TM_BUNDLE_SUPPORT']+'/lib/c_env'

default_value = STDIN.read

word   = ENV['TM_CURRENT_WORD']
current_line   = ENV['TM_CURRENT_LINE']
doc    = STDIN.read.strip

line_num = ENV['TM_LINE_NUMBER']
line_idx = ENV['TM_LINE_INDEX']

pre, changed, post = [], [], []
a = pre
	
doc.split("\n").each do |line|
	a &lt;&lt; line
	if line =~ pkg
		pkg = nil
		a = imps
	elsif line =~ cls || line =~ mta
		cls = nil
		a = post
	end
end

irgx = /^\s*import\s+#{import.gsub('.', '\.')}(\s|;)/
safe = 0
indent = ""

imps.each_with_index do |line,index|
	if line =~ irgx		
		TextMate.exit_insert_text(cla.sub(word,'')) if word != cla
		TextMate.exit_show_tool_tip("#{word} already imported")
	elsif line =~ /^(\s*)import\s+/
		indent = $1
		safe = index
	end
end

imps[safe] = "#{imps[safe]}\n#{indent}import #{import};"

print pre.join("\n")+"\n"+imps.join("\n")+"\n"+post.join("\n")

line_idx = (line_idx.to_i-word.length)+(import.split(".")[-1].length)+1

pid = fork do
	STDOUT.reopen(open('/dev/null'))
	STDERR.reopen(open('/dev/null'))
	TextMate.go_to(:line =&gt; line_num.to_i+1, :column =&gt; line_idx)
	TextMate.
end
</string>
	<key>fallbackInput</key>
	<string>none</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>@M</string>
	<key>name</key>
	<string>moveToParameter</string>
	<key>output</key>
	<string>openAsNewDocument</string>
	<key>scope</key>
	<string>source.actionscript.3</string>
	<key>uuid</key>
	<string>503524DE-A46E-4ACD-AD14-817808B19C6F</string>
</dict>
</plist>
